CREATE TABLE IF NOT EXISTS PUBLIC.MPA (
MPA_ID INTEGER NOT NULL AUTO_INCREMENT,
NAME VARCHAR_IGNORECASE,
CONSTRAINT MPA_ID_PK PRIMARY KEY (MPA_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM (
	FILM_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR_IGNORECASE NOT NULL,
	DESCRIPTION VARCHAR_IGNORECASE NOT NULL,
	RELEASE_DATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	MPA_ID INTEGER NOT NULL,
	CONSTRAINT FILM_PK PRIMARY KEY (FILM_ID),
	CONSTRAINT MPA_FK FOREIGN KEY (MPA_ID) REFERENCES PUBLIC.MPA(MPA_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
	GENRE_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR_IGNORECASE NOT NULL,
	CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_GENRE (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	FILM_ID INTEGER NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT ID_PK PRIMARY KEY (ID),
	CONSTRAINT GENRE_ID_FK FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(GENRE_ID),
	CONSTRAINT FILM_ID_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC."USER" (
	USER_ID INTEGER NOT NULL AUTO_INCREMENT,
	EMAIL VARCHAR_IGNORECASE NOT NULL,
	LOGIN VARCHAR_IGNORECASE,
	NAME VARCHAR_IGNORECASE NOT NULL,
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT USER_PK PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.LIKES_FROM_USERS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	FILM_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	CONSTRAINT LIKES_FROM_USERS_PK PRIMARY KEY (ID),
	CONSTRAINT LIKES_FROM_USERS_USER_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC."USER"(USER_ID),
	CONSTRAINT LIKES_FROM_USERS_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDS_IDS (
    ID INTEGER NOT NULL AUTO_INCREMENT,
	USER_ID INTEGER NOT NULL,
	FRIEND_ID INTEGER,
	CONSTRAINT FRIENDS_IDS_PK PRIMARY KEY (ID),
	CONSTRAINT USER_ID_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC."USER"(USER_ID),
	CONSTRAINT FRIEND_ID_FK FOREIGN KEY (FRIEND_ID) REFERENCES PUBLIC."USER"(USER_ID)
);