CREATE TABLE IF NOT EXISTS MPA (
    MPA_ID INTEGER NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(255),
    CONSTRAINT MPA_ID_PK PRIMARY KEY (MPA_ID)
    );

CREATE TABLE IF NOT EXISTS FILM (
    FILM_ID INTEGER NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    RELEASE_DATE TIMESTAMP,
    DURATION INTEGER NOT NULL,
    MPA_ID INTEGER,
    CONSTRAINT FILM_PK PRIMARY KEY (FILM_ID),
    CONSTRAINT MPA_FK FOREIGN KEY (MPA_ID) REFERENCES MPA(MPA_ID)
    );

CREATE TABLE IF NOT EXISTS GENRE (
    GENRE_ID INTEGER NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(255) NOT NULL,
    CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
    );

CREATE TABLE IF NOT EXISTS FILM_GENRE (
    FILM_ID INTEGER NOT NULL,
    GENRE_ID INTEGER NOT NULL,
    CONSTRAINT FILM_GENRE_PK PRIMARY KEY (FILM_ID, GENRE_ID),
    CONSTRAINT GENRE_ID_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRE(GENRE_ID),
    CONSTRAINT FILM_ID_FK FOREIGN KEY (FILM_ID) REFERENCES FILM(FILM_ID)
    );

CREATE TABLE IF NOT EXISTS USER_ (
    USER_ID INTEGER NOT NULL AUTO_INCREMENT,
    EMAIL VARCHAR(255) NOT NULL,
    LOGIN VARCHAR(255),
    NAME VARCHAR(255) NOT NULL,
    BIRTHDAY TIMESTAMP,
    CONSTRAINT USER_PK PRIMARY KEY (USER_ID)
    );

CREATE TABLE IF NOT EXISTS LIKES_FROM_USERS (
    FILM_ID INTEGER NOT NULL,
    SER_ID INTEGER NOT NULL,
    CONSTRAINT LIKES_FROM_USERS_PK PRIMARY KEY (FILM_ID, USER_ID),
    CONSTRAINT LIKES_FROM_USERS_USER_FK FOREIGN KEY (USER_ID) REFERENCES USER_(USER_ID),
    CONSTRAINT LIKES_FROM_USERS_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES FILM(FILM_ID)
    );

CREATE TABLE IF NOT EXISTS FRIENDS_IDS (
    USER_ID INTEGER NOT NULL,
    FRIEND_ID INTEGER,
    CONSTRAINT FRIENDS_IDS_PK PRIMARY KEY (USER_ID, FRIEND_ID),
    CONSTRAINT USER_ID_FK FOREIGN KEY (USER_ID) REFERENCES USER_(USER_ID),
    CONSTRAINT FRIEND_ID_FK FOREIGN KEY (FRIEND_ID) REFERENCES USER_(USER_ID)
    );

CREATE TABLE IF NOT EXISTS feed (
    event_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INT,
    timestamp BIGINT NOT NULL,
    event_type VARCHAR(20) NOT NULL,
    operation VARCHAR(20) NOT NULL,
    entity_id INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES USER_ (USER_ID) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS FRIENDS_IDS (
	USER_ID INTEGER NOT NULL,
	FRIEND_ID INTEGER,
	CONSTRAINT FRIENDS_IDS_PK PRIMARY KEY (USER_ID, FRIEND_ID),
	CONSTRAINT USER_ID_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USER_(USER_ID),
	CONSTRAINT FRIEND_ID_FK FOREIGN KEY (FRIEND_ID) REFERENCES PUBLIC.USER_(USER_ID)
);

CREATE TABLE IF NOT EXISTS feed (
    event_id    INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id     INT,
    timestamp   BIGINT NOT NULL,
    event_type  VARCHAR(20) NOT NULL,
    operation    VARCHAR(20) NOT NULL,
    entity_id   INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE
    );